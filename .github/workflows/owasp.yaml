name: OWASP Code Security Pipeline (Zero Secrets)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily at 2 AM UTC for dependency updates
    - cron: '0 2 * * *'
  workflow_dispatch:

env:
  FAIL_ON_HIGH: true

jobs:
  # Job 1: Secret Detection in Code
  secret-detection:
    name: 🔍 Secret Detection
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run TruffleHog
        run: |
          pip install trufflehog
          trufflehog filesystem --directory . || true

      - name: Run GitLeaks
        run: |
          curl -sSfL https://github.com/gitleaks/gitleaks/releases/latest/download/gitleaks-linux-amd64 -o gitleaks
          chmod +x gitleaks
          ./gitleaks detect -c .gitleaks.toml --report-format sarif --report-path gitleaks.sarif || true

      - uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: gitleaks.sarif

  # Job 2: Static Application Security Testing (SAST)
  sast-analysis:
    name: 🛡️ SAST Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: CodeQL Init
        uses: github/codeql-action/init@v3
        with:
          languages: javascript, python, java, go

      - uses: github/codeql-action/autobuild@v3
      - uses: github/codeql-action/analyze@v3

      - name: Run Semgrep (local rules)
        run: |
          pip install semgrep
          semgrep --config p/owasp-top-ten --sarif -o semgrep.sarif || true

      - uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: semgrep.sarif

      - name: Run Bandit (Python)
        run: |
          pip install bandit
          bandit -r . -f sarif -o bandit.sarif || true

      - uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: bandit.sarif

      - name: Run ESLint Security (JavaScript/TypeScript)
        run: |
          if [ -f "package.json" ]; then
            npm install --no-fund --no-audit eslint eslint-plugin-security
            npx eslint . --ext .js,.jsx,.ts,.tsx -f json -o eslint-report.json || true
          fi

  # Job 3: Dependency Vulnerability Scanning
  dependency-check:
    name: 📦 Dependency Vulnerability Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Python Dependency Audit
        run: |
          pip install pip-audit
          pip-audit -f sarif -o pip-audit.sarif || true

      - uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: pip-audit.sarif

      - name: Node.js Dependency Audit
        run: |
          if [ -f "package.json" ]; then
            npm audit --json > npm-audit.json || true
          fi

  # Job 4: License Compliance
  license-check:
    name: 📄 License Compliance
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check licenses with license-checker
        run: |
          if [ -f "package.json" ]; then
            npm install -g license-checker
            license-checker --production --json --out licenses.json
            cat licenses.json | grep -i "gpl\|agpl" || echo "✅ No restrictive licenses found"
          fi

  # Job 5: IaC Security
  iac-security:
    name: 🏗️ IaC Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run Checkov
        run: |
          pip install checkov
          checkov -d . -o sarif > checkov.sarif || true

      - uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: checkov.sarif

  # Job 6: Security Report Summary
  security-report:
    name: 📈 Security Report Summary
    runs-on: ubuntu-latest
    needs: [secret-detection, sast-analysis, dependency-check, license-check, iac-security]
    if: always()
    steps:
      - uses: actions/checkout@v4

      - name: Generate Summary
        run: |
          echo "# 🔒 Security Scan Summary" > summary.md
          echo "" >> summary.md
          echo "✅ Secrets scan: completed" >> summary.md
          echo "✅ SAST scan: completed" >> summary.md
          echo "✅ Dependency scan: completed" >> summary.md
          echo "✅ License compliance: completed" >> summary.md
          echo "✅ IaC scan: completed" >> summary.md

      - uses: actions/upload-artifact@v4
        with:
          name: security-summary
          path: summary.md
